* {
  box-sizing:border-box;
  padding: 0;
  margin: 0; 
}

body {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
}

header {
  background-color: #E4E3D0;
  color: #343939;
  text-shadow: 0 1px #0091c2;
  text-align: center;
  font-family: 'Newsreader', serif;
  font-weight: bolder;
  padding: 25px;
  border: 2px solid #8B8D8D;
  box-shadow: 2px 2x 6px darkgray;
}

h2 {
  font-style: italic;
  text-shadow: 0 1px #0091c2;
}

  .news {
    display: flex;
    position: absolute;
    color: white;
    border: 4px solid black;
  }

form {
  display: flex;
  position: absolute;
  font-size: 18px;
  top: 200px;
  left: 10px;
  text-align: center;

  border: 2px solid rgb(233, 241, 185);
  }

.background-image {
      display: flex;
       height: 100%;
       width: 100%;
       border-radius: 0px
   }



   @import url("https://fonts.googleapis.com/css?family=Roboto:400,400i,700");


.flexbox {
background: linear-gradient(#F8F0B3, #8B8D8D);
width: 30%;
height: 20%;
display: flex;

align-items: center;
position: relative;
margin-top: -600px;
border: 2px solid #8B8D8D;
box-shadow: 2px 2px 6px darkgray;
}

.search {
margin: 20px;
}

.search > h3 {
font-weight: normal;
}

.search > h1,
.search > h3 {
color: #343939;
margin-bottom: 15px;
text-shadow: 0 1px #0091c2;
}

.search > div {
display: inline-block;
position: relative;
filter: drop-shadow(0 1px #0091c2);
}

.search > div:after {
content: "";
background: white;
width: 4px;
height: 20px;
position: relative;
top: 40px;
right: 2px;
transform: rotate(135deg);
}

.search > div > input {
color: #343939;
font-size: 16px;
background: whitesmoke;
width: 25px;
height: 25px;
padding: 10px;
border: solid 3px white;
outline: none;
border-radius: 35px;
transition: width 0.5s;
}

.search > div > input::placeholder {
color: #343939;
opacity: 0;
transition: opacity 150ms ease-out;
}

.search > div > input:focus::placeholder {
opacity: 1;
}

.search > div > input:focus,
.search > div > input:not(:placeholder-shown) {
width: 200px;
}

.list-group-search {
  position: relative;
  display: block;
  padding: 8px;
  background-color: whitesmoke;
  border: 1px solid rgba(0,0,0,.125);
}
.list-group-search:hover {
  cursor:pointer;
  outline:none;
  border-color: #9ecaed;
  box-shadow: 0 0 10px #9ecaed; 
}


/*-----------------------*/
/* Parent wrapper to carousel. Width can be changed as needed. */
.carousel-wrapper {
  overflow: hidden;
  width: 90%;
}

/* Apply 'border-box' to 'box-sizing' so border and padding is included in the width and height. */
.carousel-wrapper * {
  box-sizing: border-box;
}

.carousel {
  transform-style: preserve-3d;
}

/* By default we're hiding items (except the initial one) until the JS initiates. Elements are absolutely positioned with a width of 100% 
(as we're styling for mobile first), letting the content's height dictate the height of the carousel. Our magic property here for all our animation needs is 'transition', 
taking the properties we wish to animate 'transform' and 'opacity', along with the length of time in seconds. */
.news_card {
  display:none;
  position: absolute;
  text-align:center;
  top:0;
  width: 100%;
  margin: auto;
  padding: 1rem 4rem;
  z-index: 100;
  transition: transform .5s, z-index .5s;
}

/* Display the initial item and bring it to the front using 'z-index'. These styles also apply to the 'active' item. */
.news_card.active {
display:block;
position: relative;
z-index: 900;
}

/* Display the initial item and bring it to the front using 'z-index'. These styles also apply to the 'active' item. */
/* Set 'z-index' to sit behind our '.active' item. */
.news_card.prev,
.news_card.next {
z-index: 800;
}

@media screen and (max-width: 992px) {
  form {
    width: 50%;
  }
}

/* Cards are stacked on top of each other at 768px or smaller */
@media screen and (max-width: 768px) {
  form {
    width: 100%;
  }
}
/* Translate previous item to the left */
.news_card.prev {
transform: translateX(-100%); /* Move 'prev' item to the left */
}

/* Translate next item to the right */
.news_card.next {
transform: translateX(100%); /* Move 'next' item to the right */
}

.carousel__button--prev,
.carousel__button--next {
  position: absolute;
  top:50%;
  width: 3rem;
  height: 3rem;
  background-color: #FFF;
  transform: translateY(-50%);
  border-radius: 50%;
  cursor: pointer; 
  z-index: 1001; /* Sit on top of everything */
  border: 1px solid black;
  /*  opacity: 0;  Hide buttons until carousel is initialised 
  transition:opacity 1s;*/
}

.carousel__button--prev {
  left:0;
}

.carousel__button--next {
  right:0;
}

/* Use pseudo elements to insert arrows inside of navigation buttons */
.carousel__button--prev::after,
.carousel__button--next::after {
  content: " ";
  position: absolute;
  width: 10px;
  height: 10px;
  top: 50%;
  left: 54%;
  border-right: 2px solid black;
  border-bottom: 2px solid black;
  transform: translate(-50%, -50%) rotate(135deg);
}
.carousel__button--next::after {
  left: 47%;
  transform: translate(-50%, -50%) rotate(-45deg);
}